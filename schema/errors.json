{
  "$id":"https://serverlessworkflow.io/schemas/0.9/errors.json",
  "$schema":"http://json-schema.org/draft-07/schema#",
  "description":"Serverless Workflow specification - errors schema",
  "type":"object",
  "errors":{
     "oneOf":[
        {
           "type":"string",
           "format":"uri",
           "description":"URI to a resource containing workflow error strategy (json or yaml)"
        },
        {
           "type":"object",
           "description":"The workflow's error handling configuration, including error definitions, error handlers and error policies",
           "properties":{
              "definitions":{
                 "type":"array",
                 "description":"Defines errors that can be explicitly handled and/or thrown during workflow execution",
                 "items":{
                    "$ref":"#/definitions/errorDefinition"
                 },
                 "additionalItems":false,
                 "minItems":1
              },
              "handlers":{
                 "type":"array",
                 "description":"Defines error handlers used to configure what to do when catching specific errors",
                 "items":{
                    "$ref":"#/definitions/errorHandler"
                 },
                 "additionalItems":false,
                 "minItems":1
              },
              "policies":{
                 "type":"array",
                 "description":"Defines groups of error handlers that define reusable error policies",
                 "items":{
                    "$ref":"#/definitions/errorPolicy"
                 },
                 "additionalItems":false,
                 "minItems":1
              }
           }
        }
     ]
  },
  "required":[
     "errors"
  ],
  "definitions":{
     "errorDefinition":{
        "type":"object",
        "properties":{
           "name":{
              "type":"string",
              "description":"The name of the error. Must follow the Serverless Workflow Naming Convention.",
              "pattern":"^[a-z0-9](-?[a-z0-9])*$",
              "minLength": 1
           },
           "source":{
              "type":"string",
              "description":"An RFC6901 JSON pointer that precisely identifies the component within a workflow definition (ex: funcRef, subflowRef, ...) from which the described issue originates",
              "pattern":"/(\/(([^/~])|(~[01]))*)/g",
              "minLength": 1
           },
           "type":{
              "type":"string",
              "description":"A RFC3986 URI reference that identifies the problem type. The RFC7807 Problem Details specification encourages that, when dereferenced, it provide human-readable documentation for the problem type (e.g., using HTML)",
              "format":"uri",
              "minLength": 1
           },
           "status":{
              "type":"integer",
              "description":"The status code generated by the origin for an occurrence of a problem. Status codes are extensible by nature and runtimes are not required to understand the meaning of all defined status codes. However, for cross-compatibility purpose, the specification encourages using RFC7231 HTTP Status Codes"
           },
           "title":{
              "type":"string",
              "description":"A short, human-readable summary of a problem type. It SHOULD NOT change from occurrence to occurrence of a problem, except for purposes of localization"
           },
           "detail":{
              "type":"string",
              "description":"A human-readable explanation specific to an occurrence of a problem"
           }
        },
        "additionalProperties":false,
        "required":[
           "name",
           "type",
           "status",
           "source"
        ]
     },
     "errorReference":{
        "oneOf":[
           {
              "type":"object",
              "properties":{
                 "refName":{
                    "type":"string",
                    "minLength": 1
                 }
              },
              "required":[
                 "refName"
              ],
              "additionalProperties":false
           },
           {
              "type":"object",
              "properties":{
                 "instance":{
                    "type":"string",
                    "minLength": 1
                 },
                 "type":{
                    "type":"string",
                    "minLength": 1
                 },
                 "status":{
                  "oneOf": [
                    {
                      "type": "string",
                      "minLength": 1
                    },
                    {
                      "type": "integer"
                    }
                  ]
                }
              },
              "minProperties":1,
              "additionalProperties":false
           }
        ]
     },
     "throw":{
        "oneOf":[
           {
              "type":"boolean",
              "description":"If true, rethrows the caught error as is"
           },
           {
              "type":"object",
              "anyOf":[
                 {
                    "required":[
                       "refName"
                    ],
                    "properties":{
                       "refName":{
                          "type":"string"
                       }
                    }
                 },
                 {
                    "required":[
                       "type",
                       "status"
                    ],
                    "properties":{
                       "type":{
                          "type":"string",
                          "minLength": 1
                       },
                       "status":{
                          "anyOf":[
                             {
                                "type":"integer"
                             },
                             {
                                "type":"string",
                                "minLength": 1
                             }
                          ]
                       },
                       "title":{
                          "type":"string",
                          "minLength": 1
                       },
                       "detail":{
                          "type":"string",
                          "minLength": 1
                       }
                    }
                 }
              ]
           }
        ]
     },
     "errorHandler":{
        "type":"object",
        "properties":{
           "name":{
              "type":"string",
              "description":"The unique name which is used to reference the handler.",
              "pattern":"^[a-z0-9](-?[a-z0-9])*$",
              "minLength": 1
           },
           "when":{
              "type":"array",
              "items":{
                 "$ref":"#/definitions/errorReference"
              },
              "description":"References the errors to handle. If null, and if `exceptWhen` is null, all errors are caught.",
              "additionalItems":false,
              "minItems":1
           },
           "exceptWhen":{
              "type":"array",
              "items":{
                 "$ref":"#/definitions/errorReference"
              },
              "description":"References the errors not to handle. If null, and if `when` is null, all errors are caught.",
              "additionalItems":false,
              "minItems": 1
           },
           "retry":{
              "oneOf":[
                 {
                    "type":"string",
                    "description":"The unique name of the retry definition to use"
                 },
                 {
                    "$ref":"retries.json#/definitions/retrydef",
                    "description":"The inline retry definition to use"
                 }
              ]
           },
           "then":{
              "$ref":"#/definitions/errorOutcomeDefinition"
           }
        },
        "required":[
           "name"
        ]
     },
     "errorOutcomeDefinition":{
        "type":"object",
        "properties":{
           "compensate":{
              "type":"string",
              "description":"Unique Name of a workflow state which is responsible for compensation"
           },
           "end":{
              "$ref":"workflow.json#/definitions/end"
           },
           "transition":{
              "$ref":"workflow.json#/definitions/transition"
           },
           "throw":{
              "$ref":"#/definitions/throw"
           }
        },
        "minProperties":1,
        "maxProperties":1
     },
     "errorHandlerReference":{
        "type":"object",
        "oneOf":[
           {
              "properties":{
                 "refName":{
                    "type":"string",
                    "minLength": 1
                 }
              },
              "required":[
                 "refName"
              ],
              "additionalProperties": false
           },
           {
              "properties":{
                 "when":{
                    "type":"array",
                    "items":{
                       "$ref":"#/definitions/errorReference"
                    },
                    "additionalItems":false,
                    "minItems": 1
                 },
                 "exceptWhen":{
                    "type":"array",
                    "items":{
                       "$ref":"#/definitions/errorReference"
                    },
                    "additionalItems":false,
                    "minItems": 1
                 },
                 "retry":{
                    "oneOf":[
                       {
                          "type":"string",
                          "minLength": 1
                       },
                       {
                          "$ref":"retries.json#/definitions/retrydef"
                       }
                    ]
                 },
                 "then":{
                    "$ref":"#/definitions/errorOutcomeDefinition"
                 }
              },
              "additionalProperties": false
           }
        ]
     },
     "errorPolicy":{
        "type":"object",
        "properties":{
           "name":{
              "type":"string",
              "description":"The unique name which is used to reference the policy.",
              "pattern":"^[a-z0-9](-?[a-z0-9])*$",
              "minLength": 1
           },
           "handlers":{
              "type":"array",
              "description":"Defines the handlers the policy is made out of",
              "items":{
                 "$ref":"#/definitions/errorHandlerReference"
              },
              "additionalItems":false,
              "minItems": 1
           }
        },
        "required":[
           "name"
        ]
     }
  }
}